group 'io.thirdplanet.lab'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.2.21'
    ext.kotlin_version = '1.1.2-5'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.codehaus.groovy:groovy-all:2.4.12'
    // https://mvnrepository.com/artifact/com.typesafe.akka/akka-actor_2.11
    compile group: 'com.typesafe.akka', name: 'akka-actor_2.11', version: '2.5.4'
    // https://mvnrepository.com/artifact/com.typesafe.akka/akka-actor_2.11
    compile group: 'com.typesafe.akka', name: 'akka-actor_2.11', version: '2.5.4'



    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

sourceSets.main.resources.srcDirs = [ "src/" ]
sourceSets.main.resources.includes = [ "**/*.txt" ]


task run(type:JavaExec,dependsOn:classes){
    main='Driver'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}


task fatJar(type:Jar){
    manifest{
        attributes('Main-Class':'com.fractal.pfsense.etl.pfsense_nettraffic.Driver')
    }
    baseName = project.name + '-all'
    from{
        configurations.compile.collect{ it.isDirectory() ? it : zipTree(it) }
    }
    exclude ('META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA')
    with jar
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

